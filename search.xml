<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>”第11章 指针和数组“</title>
      <link href="/2022/04/25/%E2%80%9D%E6%8C%87%E9%92%88%E5%92%8C%E6%95%B0%E7%BB%84%E2%80%9C/"/>
      <url>/2022/04/25/%E2%80%9D%E6%8C%87%E9%92%88%E5%92%8C%E6%95%B0%E7%BB%84%E2%80%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h1><h3 id="11-1指针和一维数组的关系"><a href="#11-1指针和一维数组的关系" class="headerlink" title="11.1指针和一维数组的关系"></a>11.1指针和一维数组的关系</h3><p>定义一个数组</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>];</span><br></pre></td></tr></table></figure><p>它的函数名a所表示的就是a[0]的地址，</p><h4 id="指针指向字符串，无法修改，需要引入“字符串-数组”来进行修改；-数组名代表的指针无法进行修改，需要指针指向数组，才能对其进行修改（-a和-p所起的作用是一样的，但是-a无法修改，-p可以修改）"><a href="#指针指向字符串，无法修改，需要引入“字符串-数组”来进行修改；-数组名代表的指针无法进行修改，需要指针指向数组，才能对其进行修改（-a和-p所起的作用是一样的，但是-a无法修改，-p可以修改）" class="headerlink" title="指针指向字符串，无法修改，需要引入“字符串=数组”来进行修改； 数组名代表的指针无法进行修改，需要指针指向数组，才能对其进行修改（* a和* p所起的作用是一样的，但是* a无法修改，* p可以修改）"></a>指针指向字符串，无法修改，需要引入“字符串=数组”来进行修改； 数组名代表的指针无法进行修改，需要指针指向数组，才能对其进行修改（* a和* p所起的作用是一样的，但是* a无法修改，* p可以修改）</h4><p>所以有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a+1==&amp;a[1];</span><br><span class="line">*(a+1)==a[1];</span><br></pre></td></tr></table></figure><h4 id="p-和p-1的区别；"><a href="#p-和p-1的区别；" class="headerlink" title="p++和p+1的区别；"></a>p++和p+1的区别；</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *p=a;</span><br><span class="line">p++;<span class="comment">//在原来的地址上直接加siezof（int），对其赋值；</span></span><br><span class="line">p+<span class="number">1</span>；<span class="comment">//先让右边的p指向下一个元素，然后让左边的p的地址等于下一个元素的地址；</span></span><br></pre></td></tr></table></figure><p>用两个函数说明:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">f1</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> arr[<span class="number">5</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>&#125;;</span><br><span class="line">  <span class="type">int</span> *p = &amp;(arr[<span class="number">2</span>]);</span><br><span class="line">  <span class="keyword">for</span> (; p &gt;= &amp;arr[<span class="number">2</span>]; p--)</span><br><span class="line">  &#123;</span><br><span class="line">    *(p++) = *p;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">f2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> arr[<span class="number">5</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>&#125;;</span><br><span class="line">  <span class="type">int</span> *p = &amp;(arr[<span class="number">2</span>]);</span><br><span class="line">  <span class="keyword">for</span> (; p &gt;= &amp;arr[<span class="number">2</span>]; p--)</span><br><span class="line">  &#123;</span><br><span class="line">    *(p+<span class="number">1</span>) = *p;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>f1因为p在自己的地址上加一减一，陷入死循环，f2也在自己的地址上加一，但没有赋值，所以能离开循环。<br>p++同p+=1，p本身因为赋值指向的变量发生改变，而p+1只是整体暂时地指向了某个变量。<br>所以对于数组而言，需要暂时借用下一个元素的值而不改变指针的指向，+1作为整体即可。</p><h3 id="指针和二维数组的关系"><a href="#指针和二维数组的关系" class="headerlink" title="指针和二维数组的关系"></a>指针和二维数组的关系</h3><h4 id="二维数组行地址和列地址的关系"><a href="#二维数组行地址和列地址的关系" class="headerlink" title="二维数组行地址和列地址的关系"></a>二维数组行地址和列地址的关系</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对于一维数组</span></span><br><span class="line"><span class="type">char</span> A[]=&#123; &#125;;</span><br><span class="line"><span class="comment">//A表示的是A[0]的变量地址；而A+1可以表示A[0]的变量地址</span></span><br><span class="line"><span class="comment">//那么定义一个二维数组，有：</span></span><br><span class="line"><span class="type">char</span> a[i][j]=&#123;  &#125;;</span><br><span class="line"><span class="comment">//结论：a表示的是a[0]的变量地址；而a+1表示的是a[0][1]的变量地址，</span></span><br></pre></td></tr></table></figure><p>这里的”1”表示的是增加<br>1* sizeof（int），所以对于一维数组来说是要指向下一个元素的地址。<br>我们用字符来进行理解：假定二维数组第一个元素是”Hello”,那么整个a[0]都在里面<br>因为第二个下标决定字符串的长度，所以二维数组每一行都有j* sizeof（int），那么增加一个sizeof（int）<br>只能从a[0][0]→a[0][1]<br>所以有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[i][j]=*(a[i]+j)=*(*(a+i)+j)=(*(a+i))[j];</span><br></pre></td></tr></table></figure><p>（简单记忆：一维数组，元素加一减一只有a能够发生指向性的改变，其它元素的地址只能由a加减来得到；二维数组，元素的加一减一只能由a和a[0]发生指向性的改变，a的加减改变只改变a的一维下标值，而a[0]的加减改变a的二维下标值，不管是一维数组还是二维数组，加减之后得到的整体仍是指针变量,所以我们不考虑它们非指针输出的其它结果，在二维数组里面，a+i,也不考虑结果（但是我们考虑* 后的结果））<br>所以要把整个数组的元素输出，应用一次或两次for循环。<br>a[0]的作用可以延伸到a[i]，故：a与a[i]都是指针变量；</p><h4 id="通过二维数组的行指针和列指针来引号二维数组元素"><a href="#通过二维数组的行指针和列指针来引号二维数组元素" class="headerlink" title="通过二维数组的行指针和列指针来引号二维数组元素"></a>通过二维数组的行指针和列指针来引号二维数组元素</h4><p>因为二维数组里，行指针定义为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">3</span>][<span class="number">9</span>] = &#123;<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;def&quot;</span>,<span class="string">&quot;ghi&quot;</span>&#125;;<span class="comment">//这里用字符串数组举例</span></span><br><span class="line"><span class="type">char</span> *p=a;</span><br></pre></td></tr></table></figure><ul><li>p和* a只能表示某个字符串或者是某串数字；<br>所以需要引入列指针来精确地表示某个元素<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">3</span>][<span class="number">9</span>] = &#123;<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;def&quot;</span>,<span class="string">&quot;ghi&quot;</span>&#125;;</span><br><span class="line"><span class="type">char</span> *p=a[<span class="number">0</span>];</span><br></pre></td></tr></table></figure>对于列指针，要从a[0][0]指向某个元素a[m][n],默认数组定义为a[i][j]<br>在将其视为一维数组的情况下，需要跳过”i* n+j”个元素<br>（能够当做一维数组运算的也就说明了为什么在定义二维数组的列指针的时候无须指定它的列数）<em>列指针+n把所有的字符串都放在同一行。</em><br>但是在定义二维数组的时候则相反，若没有定义列数，行指针无法加1<br> <em>行指针+n把字符按行列分列</em></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c中的%（）代表什么--待补充</title>
      <link href="/2022/04/25/%E2%80%9Dc%E4%B8%AD%E7%9A%84-%EF%BC%88%EF%BC%89%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E2%80%9C/"/>
      <url>/2022/04/25/%E2%80%9Dc%E4%B8%AD%E7%9A%84-%EF%BC%88%EF%BC%89%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E2%80%9C/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%d  用于10进制整数的输入输出</span><br><span class="line">%x  用于12进制整数的输入输出</span><br><span class="line">%o  用于8进制整数的输入输出</span><br><span class="line">%f  用于浮点数的输出（包括double和float）</span><br><span class="line">%lf 用于浮点数的输入</span><br><span class="line">%c  用于字符的输入输出</span><br><span class="line">%p  用于指针的输入输出</span><br><span class="line">%s  用于字符串的输入输出(%8s表示只能输入八个字符，超出的会被分配给下一个字符)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>“c-第10章字符串”</title>
      <link href="/2022/04/25/%E5%AD%97%E7%AC%A6%E4%B8%B2%E2%80%9D/"/>
      <url>/2022/04/25/%E5%AD%97%E7%AC%A6%E4%B8%B2%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<h1 id="第10章-字符串"><a href="#第10章-字符串" class="headerlink" title="第10章 字符串"></a>第10章 字符串</h1><h3 id="10-1字符串变量"><a href="#10-1字符串变量" class="headerlink" title="10.1字符串变量"></a>10.1字符串变量</h3><pre><code>字符串字面量，也称字符串常量，由双引号括起来的字符序列，例如&quot;Hello&quot;和&quot;123&quot;，无论双引号内有多少个字符，都代</code></pre><p>表一个字符串变量。<br>    需要区分：’a’是字符，”abc”是字符串变量<br>    为了确定字符串变量的长度，字符串末尾会添加一个ASCII值为0的空操作符，’\0’作为字符串结束的标志，其作用等价于0</p><h3 id="10-2字符串的储存-字符串的初始化"><a href="#10-2字符串的储存-字符串的初始化" class="headerlink" title="10.2字符串的储存(字符串的初始化)"></a>10.2字符串的储存(字符串的初始化)</h3><p>c里面一般将字符串储存在数组内，但仅当字符型数组末尾的元素为’\0’才表明该数组是字符串数组，’\0’也占用一个字节的长度。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> str[<span class="number">6</span>]=&#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"><span class="comment">//若忽略对数组长度的的声明，系统会利用提供的初值个数初始化数组的大小</span></span><br><span class="line"><span class="type">char</span> str[]=&#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"><span class="type">char</span> str[]=&#123;<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>&#125;;<span class="comment">//这不是一个字符串数组，只是一个字符型数组</span></span><br><span class="line"><span class="type">char</span> str[]=&#123;<span class="string">&quot;Hello&quot;</span>&#125;;</span><br><span class="line"><span class="type">char</span> str[]=<span class="string">&quot;Hello&quot;</span>;   <span class="comment">//这两种方法所定义的默认为字符串数组，长度为字符数+1</span></span><br></pre></td></tr></table></figure><p>通常将一个字符串放在一维数组中，多个字符串放在二维数组中，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">char weekly[][10]&#123;&quot;Monday&quot;,&quot;Tuesday&quot;,&quot;Wednesday&quot;,&quot;Thursday&quot;,&quot;Friday&quot;,&quot;Saturady&quot;,&quot;Sunday&quot;&#125;;</span><br></pre></td></tr></table></figure><p>数组的第一维长度代表字符串的个数，可不填，第二维数组应该设立为最长字符串的长度。</p><h3 id="10-3-字符指针"><a href="#10-3-字符指针" class="headerlink" title="10.3 字符指针"></a>10.3 字符指针</h3><p>将某个指针指向某个字符串，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *ptr=<span class="string">&quot;Hello&quot;</span>;<span class="comment">//&amp;可加可不加</span></span><br></pre></td></tr></table></figure><p>这种情况下，无法通过改变* par的值对str[0]进行更改。<br>但如果将字符串保存在数组中，可以让一个字符指针指向它。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> str[<span class="number">10</span>]=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="type">int</span> *ptr=str;</span><br></pre></td></tr></table></figure><p>此时可以改变* ptr的值对str[0]进行更改<br>（指针是指向某个字符串，无法对其修改，但数组相当于是说字符串在我这里，这个时候是可以修改的）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>“c-第9章 指针”</title>
      <link href="/2022/04/25/%E2%80%9Cc-%E6%8C%87%E9%92%88%E2%80%9D/"/>
      <url>/2022/04/25/%E2%80%9Cc-%E6%8C%87%E9%92%88%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<h1 id="第9章-指针"><a href="#第9章-指针" class="headerlink" title="第9章 指针"></a>第9章 指针</h1><h3 id="9-1-变量的内存地址"><a href="#9-1-变量的内存地址" class="headerlink" title="9.1 变量的内存地址"></a>9.1 变量的内存地址</h3><p>利用取地址符“&amp;”来获取变量的地址</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p&quot;</span>,&amp;a);</span><br></pre></td></tr></table></figure><p>我们用%p来输出变量的地址值(以十六进制的无符号整数表现出来)<br>用&amp;作取地址运算符</p><h3 id="9-2-指针变量的定义和初始化"><a href="#9-2-指针变量的定义和初始化" class="headerlink" title="9.2 指针变量的定义和初始化"></a>9.2 指针变量的定义和初始化</h3><p>存放变量的地址需要一种特殊的变量，这种特殊的数据类型就是指针。具有指针类型的变量被称为 指针变量 。<br>指针变量不直接指向某个常数，而是指向某个已知常数值的变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *a=<span class="literal">NULL</span> <span class="comment">//在不确定指针指向谁的时候，一般定义指针并用NULL对其初始化</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> c=<span class="number">1</span>；</span><br><span class="line"><span class="type">int</span> *b=&amp;c；</span><br></pre></td></tr></table></figure><ul><li>b是一个int类型，指向变量c的指针变量，此时由c的地址值对b进行初始化，此时 </li><li>b作为一个整体，它的值为1，它的地址为c的地址，但不能说指针就是地址。</li></ul><h3 id="9-3-按值调用和按引用调用"><a href="#9-3-按值调用和按引用调用" class="headerlink" title="9.3 按值调用和按引用调用"></a>9.3 按值调用和按引用调用</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Fun</span><span class="params">(<span class="type">int</span> par)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arg = <span class="number">1</span>;</span><br><span class="line">    Fun(arg);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arg);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="type">void</span> <span class="title function_">Fun</span><span class="params">(<span class="type">int</span> par)</span> &#123;</span><br><span class="line">    par = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在函数Fun里面改变了arg的形参值后，输出实参值，可以发现，实参值并没有发生改变，这是因为传给函数的只是实参值的副本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Fun</span><span class="params">(<span class="type">int</span> *par)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arg = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span>*p = &amp;arg;</span><br><span class="line">    Fun(p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arg);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="type">void</span> <span class="title function_">Fun</span><span class="params">(<span class="type">int</span>*par)</span> &#123;</span><br><span class="line">    *par = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把实参的地址传给形参后，改变形参的地址、值，实参也一样会改变。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c-第8章  数组和算法基础</title>
      <link href="/2022/04/24/c-%E6%95%B0%E7%BB%84/"/>
      <url>/2022/04/24/c-%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<p><img src="/2022/04/24/c-%E6%95%B0%E7%BB%84/1.jpg" alt="233">//图片测试</p><h1 id="第8章-数组和算法基础"><a href="#第8章-数组和算法基础" class="headerlink" title="第8章  数组和算法基础"></a>第8章  数组和算法基础</h1><h3 id="8-1数组的定义和初始化"><a href="#8-1数组的定义和初始化" class="headerlink" title="8.1数组的定义和初始化"></a>8.1数组的定义和初始化</h3><h4 id="1-数组的含义"><a href="#1-数组的含义" class="headerlink" title="1.数组的含义"></a>1.数组的含义</h4><p>假定有5个人，需要读取他们的成绩，可以定义以下数组来来存储他们的成绩。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> score[<span class="number">5</span>];    <span class="comment">//此时下标个数为1</span></span><br></pre></td></tr></table></figure><p>该语句定义了：类型、名字和元素个数：有5个元素的一维数组score.<br>（注意：数组的下标都是从0开始的）</p><h4 id="2-数组的定义"><a href="#2-数组的定义" class="headerlink" title="2.数组的定义"></a>2.数组的定义</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="type">int</span> b[a];     <span class="comment">//这是错误的表达方式，c89规定在定义数组的时候不能用变量来定义数组的大小，该定义是非法的。只有在c99中才能这么使用。但这并不意味着下标值不能是变量。</span></span><br></pre></td></tr></table></figure><p>②增加宏定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> a 5; </span></span><br><span class="line"> <span class="type">int</span> b[a]=&#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">8</span>&#125;<span class="comment">//c99专用，作用同加入const</span></span><br></pre></td></tr></table></figure><p>①在非定义时</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">1</span> ;</span><br><span class="line">    <span class="type">int</span> b[]=&#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">85</span>,<span class="number">8</span>&#125;;</span><br><span class="line">     b[a]=<span class="number">1</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b[i]);</span><br><span class="line">     &#125; <span class="comment">//输出结果为 2 1 85 8</span></span><br></pre></td></tr></table></figure><h4 id="3-数组的初始化-三种方式"><a href="#3-数组的初始化-三种方式" class="headerlink" title="3.数组的初始化(三种方式)"></a>3.数组的初始化(三种方式)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="type">int</span> b[ ]=&#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">9</span>&#125;; <span class="comment">//系统会利用提供的初值的个数自动初始化数组的长度</span></span><br><span class="line"><span class="type">int</span> c[ ]=&#123;[<span class="number">1</span>]=<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">99</span>]=<span class="number">10</span>&#125;;  <span class="comment">//(c99专用)，对离散型的数据进行赋值</span></span><br></pre></td></tr></table></figure><h4 id="4-数组的元素个数"><a href="#4-数组的元素个数" class="headerlink" title="4.数组的元素个数"></a>4.数组的元素个数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span>(a[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h3 id="8-2-二位数组的定义和初始化"><a href="#8-2-二位数组的定义和初始化" class="headerlink" title="8.2 二位数组的定义和初始化"></a>8.2 二位数组的定义和初始化</h3><h4 id="1-二维数组一般这么表示"><a href="#1-二维数组一般这么表示" class="headerlink" title="1.二维数组一般这么表示"></a>1.二维数组一般这么表示</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[][<span class="number">2</span>];\\正常定义时，y轴的大小不为<span class="number">0</span>;</span><br></pre></td></tr></table></figure><h4 id="2-二维数组的初始化"><a href="#2-二维数组的初始化" class="headerlink" title="2.二维数组的初始化"></a>2.二维数组的初始化</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>&#125;,&#123;<span class="number">4</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">5</span>&#125;,&#123;<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>&#125;&#125;;<span class="comment">//两种初始化方式等价,说明,二维数组遍历的顺序应该是按a[0][0] </span></span><br><span class="line"><span class="comment">//a[0][1]的顺序来的</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简单记录一下blog的主题配置</title>
      <link href="/2022/04/24/%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bblog%E7%9A%84%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/04/24/%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bblog%E7%9A%84%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="blog主题配置的简单记录（butterfly）"><a href="#blog主题配置的简单记录（butterfly）" class="headerlink" title="blog主题配置的简单记录（butterfly）"></a>blog主题配置的简单记录（butterfly）</h1><h3 id="1-位于：blog-config-yml，设置网站个人资料"><a href="#1-位于：blog-config-yml，设置网站个人资料" class="headerlink" title="1.位于：blog_config.yml，设置网站个人资料"></a>1.位于：blog_config.yml，设置网站个人资料</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Hexo</span><br><span class="line">subtitle: &#x27;&#x27;     //副标题</span><br><span class="line">description: &#x27;&#x27;  //个人说明</span><br><span class="line">keywords:</span><br><span class="line">author: John Doe //作者</span><br><span class="line">language: en</span><br><span class="line">timezone: &#x27;&#x27;     //时区（一般不进行配置）   </span><br></pre></td></tr></table></figure><h3 id="2-位于：blog-themes-XXX-source-config-yml，设置主题配置文件"><a href="#2-位于：blog-themes-XXX-source-config-yml，设置主题配置文件" class="headerlink" title="2.位于：blog\themes\XXX\source_config.yml，设置主题配置文件"></a>2.位于：blog\themes\XXX\source_config.yml，设置主题配置文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  主页: / || fas fa-home</span><br><span class="line">  博文 || fa fa-graduation-cap:</span><br><span class="line">    分类: /categories/ || fa fa-archive</span><br><span class="line">    标签: /tags/ || fa fa-tags</span><br><span class="line">    归档: /archives/ || fa fa-folder-open</span><br><span class="line">  生活 || fas fa-list:</span><br><span class="line">    分享: /shuoshuo/ || fa fa-comments-o</span><br><span class="line">    相册: /photos/ || fa fa-camera-retro</span><br><span class="line">    音乐: /music/ || fa fa-music</span><br><span class="line">    影视: /movies/ || fas fa-video</span><br><span class="line">  友链: /links/ || fa fa-link</span><br><span class="line">  留言板: /comment/ || fa fa-paper-plane</span><br><span class="line">  #留言板: /messageboard/ || fa fa-paper-plane</span><br><span class="line">  关于笔者: /about/ || fas fa-heart  </span><br></pre></td></tr></table></figure><p>受缩进字符的影响，导航菜单有包含关系。</p><h3 id="3-代码块限制设置"><a href="#3-代码块限制设置" class="headerlink" title="3.代码块限制设置"></a>3.代码块限制设置</h3><p>①位于：blog\themes\XXX\source_config.yml,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">highlight_copy: true   //用于打开代码复制</span><br><span class="line">highlight_shrink: false   //代码框展开，反之不展开</span><br><span class="line">highlight_theme: light   //更改代码高亮主题</span><br></pre></td></tr></table></figure><h3 id="4-创建文件夹"><a href="#4-创建文件夹" class="headerlink" title="4.创建文件夹"></a>4.创建文件夹</h3><p>①分类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>之后会出现source/categories/index.md文件。<br>然后添加type: “categories” layout:”categories”到内容中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2022-04-24 16:16:00</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>打开需要分类的文章，为其添加categories属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 233</span><br><span class="line">date: 2022-04-24 16:16:00</span><br><span class="line">categories:</span><br><span class="line"> - c     </span><br><span class="line"> - x       \\一片文章只能属于一个分类，hexo会将其分类嵌套，该文章属于c下方的x分类</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>②标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>会出现source/tags/index.md文件：</p><h3 id="5-载入图片"><a href="#5-载入图片" class="headerlink" title="5.载入图片"></a>5.载入图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![你想输入的替代文字](xxxx/图片名.jpg)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于Git命令</title>
      <link href="/2022/04/23/Git%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/04/23/Git%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="关于Git命令"><a href="#关于Git命令" class="headerlink" title="关于Git命令"></a>关于Git命令</h1><h3 id="新建新文章"><a href="#新建新文章" class="headerlink" title="新建新文章"></a>新建新文章</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n “新文章名称”</span><br></pre></td></tr></table></figure><h3 id="创建新分类"><a href="#创建新分类" class="headerlink" title="创建新分类"></a>创建新分类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><h3 id="创建新标签"><a href="#创建新标签" class="headerlink" title="创建新标签"></a>创建新标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title></a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
